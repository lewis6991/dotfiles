[user]
	name = Lewis Russell
	email = lewis.russell@arm.com

[diff]
	tool = vimdiff
	algorithm = patience

[difftool]
	prompt = false

[alias]
	a    = add
	au   = add -u
	br   = branch
	cam  = commit --amend
	ca   = commit --amend --no-edit
	ci   = commit
	co   = checkout
	cp   = cherry-pick
	cpc  = cherry-pick --continue
	d    = "!f() { \
			nvim -p $(git diff --name-only) +\"tabdo Gdiff $@\" +tabfirst;\
		}; f"
	ra   = rebase --abort
	rc   = rebase --continue
	ri   = rebase --interactive
	rs   = rebase --skip
	st   = status
	stp  = status --porcelain
	su   = submodule update --recursive
	lg = "!f() {\
			width=$(($(tput cols) - 10)); \
			git log --graph --format=\"%w($width,,44)%C(bold yellow)%h %C(bold blue)%<(18)%an %C(bold green)%<(14)%cr %C(auto)%d %Creset%s\" $@; \
		}; f"
	put = "!f() {\
			git branch -f ${1-master}; \
			git checkout ${1-master}; \
			git track ${2-master}; \
		}; f"
	track = !sh -c 'git branch --set-upstream-to origin/${1-master}' -
	who = shortlog -sne
	# Gerrit aliases
	publish = "!f() {\
			branch=$(git rev-parse --abbrev-ref HEAD); \
			remoteBranch=$(git config branch.$branch.merge); \
			remoteBranch=${remoteBranch##refs/heads/}; \
			git push origin HEAD:refs/publish/${1-$remoteBranch}; \
		}; f"
	draft = "!f() {\
			branch=$(git rev-parse --abbrev-ref HEAD); \
			remoteBranch=$(git config branch.$branch.merge); \
			remoteBranch=${remoteBranch##refs/heads/}; \
			git push origin HEAD:refs/drafts/${1-$remoteBranch}; \
		}; f"
	reh = reset --hard

	gco = "!f() {\
			git fetch origin refs/changes/${1} && \
			git checkout FETCH_HEAD && \
			git branch -f gerrit/${1} &&  \
			git checkout gerrit/${1}; \
		}; f"

	list = !sh -c 'gerrit patches --assigned'

[core]
	editor = nvim
	excludesfile = ~/.gitignore

[pull]
	rebase = true

[rebase]
	autoStash = true

[fetch]
	prune = true

# vim: ft=gitconfig
