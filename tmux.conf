set -g mouse on
set-option -ga terminal-overrides ",*:Tc"
set -g default-terminal "st-256color"
set-window-option -g mode-keys vi

#-------------------------------------------------------------------------------
# Sane Scrolling
#-------------------------------------------------------------------------------
bind-key -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

#-------------------------------------------------------------------------------
# Navigation
#-------------------------------------------------------------------------------
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind -n M-h select-window -t :-
bind -n M-l select-window -t :+
bind -n M-j switch-client -n
bind -n M-k switch-client -p
bind -n M-s choose-tree

#-------------------------------------------------------------------------------
# Pane Management
#-------------------------------------------------------------------------------
bind -n C-Left  resize-pane -L 5
bind -n C-Up    resize-pane -U 5
bind -n C-Down  resize-pane -D 5
bind -n C-Right resize-pane -R 5

# Open splits easier
bind C-v splitw -h -c '#{pane_current_path}' vim .
bind C-n splitw -h -c '#{pane_current_path}'
bind C-m splitw    -c '#{pane_current_path}'

#-------------------------------------------------------------------------------
# Status bar
#-------------------------------------------------------------------------------
set -g status-interval              1
set -g status-justify               centre
set -g status-bg                    colour18
set -g status-fg                    colour7

set -g window-status-format         '  #{window_name}  '
set -g window-status-fg             colour7
set -g window-status-bg             colour18
set -g window-status-attr           dim

set -g window-status-current-format '  #{window_name}  '
set -g window-status-current-fg     colour7
set -g window-status-current-bg     colour19
set -g window-status-current-attr   bold

set -g window-status-separator      ''

set -g status-left-length 100
set -g status-left '\
#[fg=colour18,bg=colour4,bold]  #{session_name}   \
#[fg=colour4,bg=colour18]\
'

set -g status-right-length 100
set -g status-right '\
%a %e %b \
#[fg=colour19]#[fg=colour7,bg=colour19] %H:%M \
#[fg=colour4]#[bg=colour4,fg=colour18] #{host} \
'

#-------------------------------------------------------------------------------
# Symbols
#-------------------------------------------------------------------------------
# 
# 
# 

#-------------------------------------------------------------------------------
# Pane border
#-------------------------------------------------------------------------------
set -g pane-border-fg        colour19
set -g pane-border-bg        colour0
set -g pane-active-border-fg colour4
set -g pane-active-border-bg colour0

#-------------------------------------------------------------------------------

bind C-l send-keys 'C-l'
bind C-k send-keys 'C-k'

# Renumber windows when a window is closed.
set-option -g renumber-windows on

# Same as default but removes confirmation
bind-key x kill-pane
bind C-x   kill-pane

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

set -g focus-events on
set -g exit-unattached on

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Stop escape from sending Alt+
set -s escape-time 0
