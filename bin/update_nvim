#!/usr/bin/env bash

set -e

BUILD_DIR="$XDG_CACHE_HOME/nvim_build"

function info() {
  local blue='\033[0;34m'
  local nc='\033[0m' # No Color
  echo -e "$blue$1$nc"
}

function run() {
  echo "-> $*"
  "$@" >> "$BUILD_DIR.log" || cat "$BUILD_DIR.log"
}

function changes() {
  local upstream
  upstream=$(git rev-parse --abbrev-ref --symbolic-full-name "@{u}")

  local ahead_behind
  read -ra ahead_behind <<< "$(git rev-list --left-right --count "$upstream...HEAD")"

  local -i behind=${ahead_behind[0]}

  if [[ $behind == 0 ]]; then
      info "No changes"
      return 1
  fi

  info "$behind new changes"
  git log --oneline "$upstream...HEAD"

  return 0
}

function main() {
  ASAN=0
  FORCE=0
  CLEAN=0

  while [[ $# -gt 0 ]]; do
    case $1 in
      -a|--asan) ASAN=1 ;;
      -f|--force) FORCE=1 ;;
      -c|--clean) CLEAN=1 ;;
    esac
    shift
  done

  run rm -f "$BUILD_DIR.log"

  if ((CLEAN)); then
    info "Cleaning"
    run rm -rf "$BUILD_DIR"
  fi

  if [[ ! -d "$BUILD_DIR/.git" ]]; then
    run rm -rf "$BUILD_DIR"
    info "Cloning neovim"
    run git clone https://github.com/neovim/neovim \
      --filter=blob:none \
      --quiet \
      "$BUILD_DIR"
  fi

  run cd "$BUILD_DIR"

  info "Fetching updates"
  run git fetch

  if ((!FORCE)) && ! changes; then
    info "Done! (No changes)"
    exit
  fi

  info "Rebasing"
  run git rebase

  info "Cleaning workspace"
  run make distclean

  local cmake_opts=()
  if [ -n "$NVIM_INSTALL_PREFIX" ]; then
    cmake_opts+=("CMAKE_INSTALL_PREFIX=$NVIM_INSTALL_PREFIX")
  fi

  if ((ASAN)); then
    cmake_opts+=("CMAKE_BUILD_TYPE=Debug")

    info "Building (ASAN enabled)"
    run make \
      CMAKE_EXTRA_FLAGS="-DCMAKE_C_COMPILER=clang -DENABLE_ASAN_UBSAN=1" \
      "${cmake_opts[@]}"
      "CMAKE_INSTALL_PREFIX=$NVIM_INSTALL_PREFIX"
    # ASAN_OPTIONS=detect_leaks=1:check_initialization_order=1:handle_abort=1:handle_sigill=1:log_path=nvim_asan:intercept_tls_get_addr=0
    # UBSAN_OPTIONS=print_stacktrace=1 log_path=nvim_ubsan
  else
    cmake_opts+=("CMAKE_BUILD_TYPE=RelWithDebInfo")
    info "Building"
    run make "${cmake_opts[@]}"
  fi

  if [[ -z "$NVIM_INSTALL_PREFIX" ]] || [[ ! -w "$NVIM_INSTALL_PREFIX" ]]; then
    info "Installing (with sudo)"
    run sudo make install
  else
    info "Installing"
    run make install
  fi

  info "Done!"
}

main "$@"
